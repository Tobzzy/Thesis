import React, { Component } from 'react';
import { Formik, Form, Field, ErrorMessage } from 'formik';
import Service from './Service';
import './../styles/Search.css';

class Search extends Component {

  constructor(props){
    super(props)
    this.state = {
      value: '',
      domain: '',
      email: '',
      message: null
    };
    this.onSubmit = this.onSubmit.bind(this);

    
  }

  componentDidMount(){
    Service.createTest(this.state.id)
    .then(response => this.setState({
      domain: response.data.domain,
      email: response.data.email
    }))
  }

  onSubmit(values){
    let test = {
      domain: values.domain,
      email: values.email
    }
    console.log(test);
    Service.createTest(test)
    .then(() => 
    this.setState({ message: `Domain sent for testing, Please check your email for the result` }),
    this.setState({values: ''}))
  }

  validate(entries) {
    let errors = {}
    
    if (!entries.domain){
        errors.domain = 'Please enter a domain'
    }
    if (!entries.email) {
        errors.email = 'Enter an email for result'
    }
    return errors
}


  render(){
    let {domain, email} = this.state
  return (
    <div className="container">
      {this.state.message && <div className="alert alert-success">{this.state.message}</div>}
      <div className="Search">
        <Formik
        initialValues={{domain, email }}
        onSubmit={this.onSubmit}
        validate={this.validate}
        enableReinitialize={true}
      >
          {(props =>
          <Form>
            <ErrorMessage name="domain" component="div" className="alert alert-warning" />
            <ErrorMessage name="email" component="div" className="alert alert-warning" />
            <fieldset className="form-group">
              <label>Domain / IP address</label>
              <Field className="form-control" type="text" placeholder="127.0.0.1" name="domain" />
            </fieldset>
            <fieldset className="form-group">
              <label>Email</label>
              <Field className="form-control" type="text" placeholder="test@testing.com" name="email" />
            </fieldset>
            <button className="btn btn-success" type="submit">Run Test</button>
          </Form>
          )
          }
        </Formik>
          <br/>
      </div>
      </div>
  );
}
}

export default Search;
